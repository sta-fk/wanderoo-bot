<?php

namespace App\Service\KeyboardService;

use App\DTO\PlanContext;
use App\Enum\CallbackQueryData;

trait GetViewTripKeyboardTrait
{
    private function getViewPlan(PlanContext $context): string
    {
        $summaryLines = [];
        $summaryLines[] = "üåç <b>–í–∞—à –ø–ª–∞–Ω –ø–æ–¥–æ—Ä–æ–∂—ñ:</b>\n";

        if ($context->tripStyle) {
            $summaryLines[] = "üó∫Ô∏è <b>–°—Ç–∏–ª—å –ø–æ–¥–æ—Ä–æ–∂—ñ:</b> {$context->tripStyle}";
        }

        if (!empty($context->interests)) {
            $summaryLines[] = "üé≠ <b>–Ü–Ω—Ç–µ—Ä–µ—Å–∏:</b> " . implode(', ', $context->interests);
        }

        if ($context->budget) {
            $summaryLines[] = "üí∞ <b>–ë—é–¥–∂–µ—Ç:</b> {$context->budget}";
        }

        if ($context->duration) {
            $summaryLines[] = "üïë <b>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:</b> {$context->duration} –¥–Ω—ñ–≤";
        }

        if ($context->startDate) {
            $summaryLines[] = "üìÖ <b>–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É:</b> {$context->startDate}";
        }

        // –ó—É–ø–∏–Ω–∫–∏
        if (!empty($context->stops)) {
            $summaryLines[] = "\nüìç <b>–ó—É–ø–∏–Ω–∫–∏:</b>";
            foreach ($context->stops as $index => $stop) {
                $stopNumber = $index + 1;
                $summaryLines[] = "{$stopNumber}Ô∏è‚É£ {$stop->country} ‚Äî {$stop->city} ({$stop->duration} –¥–Ω—ñ–≤)";
            }
        } else {
            $summaryLines[] = "\nüìç <b>–ó—É–ø–∏–Ω–æ–∫ –Ω–µ–º–∞—î.</b>";
        }

        $summaryLines[] = "\n‚úÖ –ö–æ–ª–∏ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ñ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å <b>\"–ó–∞–≤–µ—Ä—à–∏—Ç–∏ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è\"</b> –∞–±–æ –¥–æ–¥–∞–π—Ç–µ —â–µ –∑—É–ø–∏–Ω–∫—É.";

        return implode("\n", $summaryLines);
    }

    private function getViewTripKeyboard(): array
    {
        return [
            'inline_keyboard' => [
                [
                    ['text' => '‚ûï –î–æ–¥–∞—Ç–∏ –∑—É–ø–∏–Ω–∫—É', 'callback_data' => CallbackQueryData::AddStop->value],
                ],
                [
                    ['text' => '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è', 'callback_data' => CallbackQueryData::ReadyToBuildPlan->value],
                ],
                [
                    ['text' => 'üîÑ –ü–æ—á–∞—Ç–∏ –∑–∞–Ω–æ–≤–æ', 'callback_data' => CallbackQueryData::StartYes->value],
                ],
            ]
        ];
    }
}
